---
- name: Check server status
  hosts: servers
  connection: local
  vars_files:
  - secrets.yml

  tasks:

  - name: check rescue mode
    uri:
      url: https://robot-ws.your-server.de/boot/{{ inventory_hostname }}/rescue
      method: GET
      user: "{{ hetzner_webservice_username }}"
      password: "{{ hetzner_webservice_password }}"
      force_basic_auth: yes
      status_code: 200
    register: rescue

#  - debug: var=rescue.json.rescue.password

  - name: Store password if rescue is already active
    when:  rescue.json.rescue.active == true
    set_fact:
      ansible_ssh_pass: "{{ rescue.json.rescue.password }}"

#  - debug: var=server_password
#  - debug: var=rescue

  - name: activate rescue mode
    when:  rescue.json.rescue.active == false
    uri:
      url: https://robot-ws.your-server.de/boot/{{ inventory_hostname }}/rescue
      method: POST
      user: "{{ hetzner_webservice_username }}"
      password: "{{ hetzner_webservice_password }}"
      force_basic_auth: yes
      body: "os=linux&arch=64"
      status_code: 200
      HEADER_Content-Type: "application/x-www-form-urlencoded"
    register: activated

#  - debug: var=activated

  - name: Store password if rescue got activated just now
    when:  rescue.json.rescue.active == false
    set_fact:
      ansible_ssh_pass: "{{ activated.json.rescue.password }}"
 
  - debug: var=ansible_ssh_pass

  - name: Execute hardware reset
    uri:
      url: https://robot-ws.your-server.de/reset/{{ inventory_hostname }}
      method: POST
      user: "{{ hetzner_webservice_username }}"
      password: "{{ hetzner_webservice_password }}"
      force_basic_auth: yes
      body: "type=hw"
      status_code: 200
      HEADER_Content-Type: "application/x-www-form-urlencoded"
    register: reset

  - name: waiting for server to come back
    local_action: 
      module: wait_for 
        host={{ inventory_hostname }} 
        port=22 
        delay=1 
        timeout=60

