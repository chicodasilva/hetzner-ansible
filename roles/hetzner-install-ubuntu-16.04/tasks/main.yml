---

- name: copy my public key into tempfile
  shell: /usr/bin/tail -1 /root/.ssh/authorized_keys > mykey

- name: run installimage 
  shell: /root/.oldroot/nfs/install/installimage -a -r no -i /root/images/Ubuntu-1604-xenial-64-minimal.tar.gz -d sda,sdb -K /root/mykey
  register: result

# - debug: var=result
#

- name: reboot server
  command: reboot
  async: 0
  poll: 0
  ignore_errors: True

- name: remove server from local known_hosts file
  local_action: command  /usr/bin/ssh-keygen -R {{ inventory_hostname }}
  ignore_errors: True


- name: pause for a while for the reboot to kick in
  pause: seconds=15

- name: waiting for server to come back
  local_action:
    module: wait_for
      host={{ inventory_hostname }}
      port=22
      delay=1
      timeout=90

- name: apt-get update 
  raw: apt-get update -qq 
- name: Install python 2.7 
  raw: apt-get install -qq python2.7 

- name: Fix hostname in /etc/hosts
  shell: sed -i "s/Ubuntu-1604-xenial-64-minimal/{{ hostname }}/g" /etc/hosts

- name: Fix hostname in /etc/hostname
  shell: sed -i "s/Ubuntu-1604-xenial-64-minimal/{{ hostname }}/g" /etc/hostname

- name: set hostname
  shell: hostname {{ hostname }}

- name: disabling LANG_ALL in sshd_config
  shell: sed -i 's/^AcceptEnv LANG LC_*/#AcceptEnv LANG LC_*/' /etc/ssh/sshd_config

- name: check if ClientAliveInterval is present in sshd_config
  shell: grep ^ClientAliveInterval /etc/ssh/sshd_config
  ignore_errors: true
  register: result

# - debug: var=result

- name: set ClientAliveInterval in sshd_config to 30 seconds
  shell: sed -i "\$aClientAliveInterval=30" /etc/ssh/sshd_config
  when: result.rc == 1

- name: restart service ssh
  service: name=ssh state=restarted
  when: result.rc == 1

- name: set 12000 hugepages via /etc/default/grub
  shell: sed -i "s/GRUB_CMDLINE_LINUX_DEFAULT=\"/GRUB_CMDLINE_LINUX_DEFAULT=\"hugepages=12000 /" /etc/default/grub && update-grub

- name: set 12000 hugepages 
  shell: echo 12000 > /proc/sys/vm/nr_hugepages

- name: create user mwiget
  user: name=mwiget
        state=present
        group=staff
        groups="sudo"
        shell=/bin/bash
        password={{ password }}
        comment="created via ansible"
        generate_ssh_key=yes 
        ssh_key_bits=2048 
        ssh_key_file=.ssh/id_rsa

- name: add id_rsa.pub to user mwiget
  authorized_key: user=mwiget 
    key="{{ lookup('file', '/Users/mwiget/.ssh/id_rsa.pub') }}"

- name: copy .vimrc into /root
  copy: src=files/vimrc dest=~root/.vimrc

- name: copy .vimrc into ~mwiget
  copy: src=files/vimrc dest=~mwiget/.vimrc

#- name: run apt-get update
#  apt: update_cache=yes

#- name: install minimal toolset
#  action: apt pkg={{item}} state=installed
#  with_items:
#        - git
#        - bridge-utils
#        - htop
#        - tcpdump
#        - telnet
#        - curl
#        - socat
#        - ansible
